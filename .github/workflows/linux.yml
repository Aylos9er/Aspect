name: linux

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux-nounity:
    #linux build with unity/precomiled headers disabled
    name: no-unity
    runs-on: [ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository ppa:ginggs/deal.ii-9.2.0-backports
        sudo apt-get update
        sudo apt-get install -yq --no-install-recommends libdeal.ii-dev
    - name: compile
      run: |
        mkdir build-no-unity
        cd build-no-unity
        cmake -D ASPECT_PRECOMPILE_HEADERS=OFF -D ASPECT_UNITY_BUILD=OFF -D CMAKE_CXX_FLAGS='-Werror' ..
        make -j 2
        ./aspect --test

  linux:
    #linux build including indent and documentation
    name: indent+documentation
    runs-on: [ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository ppa:ginggs/deal.ii-9.2.0-backports
        sudo apt-get update
        sudo apt-get install -yq --no-install-recommends texlive-generic-extra texlive-base texlive-latex-recommended texlive-latex-base texlive-fonts-recommended texlive-bibtex-extra lmodern texlive-latex-extra texlive-science graphviz python-pip python-setuptools libdeal.ii-dev doxygen
        doxygen --version

        wget https://github.com/tjhei/astyle/releases/download/v2.04/astyle_2.04_linux.tar.gz
        tar xf astyle_2.04_linux.tar.gz
        cd astyle/build/gcc && make
        sudo USER=root make install
        cd
        rm -rf astyle*
        astyle --version
    - name: indent
      run: |
        ./contrib/utilities/indent
        git diff --exit-code
    - name: compile
      run: |
        mkdir build
        cd build
        cmake -D ASPECT_PRECOMPILE_HEADERS=ON -D ASPECT_UNITY_BUILD=ON -D CMAKE_CXX_FLAGS='-Werror' ..
        make -j 2
        ./aspect --test
    - name: doc
      run: |
        cd doc
        export OMPI_MCA_btl="self,vader"
        ./update_parameters.sh $GITHUB_WORKSPACE/build/aspect
        make manual.pdf
    - name: archive
      uses: actions/upload-artifact@v1
      with:
        name: manual.log
        path: doc/manual/manual.log
  job:
    #linux build including indent and documentation
    name: tests
    runs-on: [ubuntu-18.04]
    container: gassmoeller/aspect-tester

    steps:
    - uses: actions/checkout@v2
    - name: compile
      run: |
        mkdir build
        cd build
        cmake \
        -G 'Ninja' \
        -D CMAKE_CXX_FLAGS='-Werror' \
        -D ASPECT_ADDITIONAL_CXX_FLAGS='-O3' \
        -D ASPECT_TEST_GENERATOR='Ninja' \
        -D ASPECT_PRECOMPILE_HEADERS=ON \
        -D ASPECT_UNITY_BUILD=ON \
        -D ASPECT_USE_PETSC=OFF \
        -D ASPECT_RUN_ALL_TESTS='ON' \
        ..
        ninja
        ./aspect --test
    - name: prebuild tests
      run: |
        # prebuilding tests...
        export OMPI_MCA_mpi_yield_when_idle=1
        export OMPI_MCA_rmaps_base_oversubscribe=1
        export OMPI_ALLOW_RUN_AS_ROOT=1
        export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
        cd build/tests
        ninja -k 0 tests || true
    - name: report test results
      run: |
        cd build
        export OMPI_MCA_mpi_yield_when_idle=1
        export OMPI_MCA_rmaps_base_oversubscribe=1
        export OMPI_ALLOW_RUN_AS_ROOT=1
        export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
        ctest \
        --no-compress-output \
        --test-action Test \
        --output-on-failure
